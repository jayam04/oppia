name: End-to-End, Lighthouse CI performance and Acceptance tests
on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*

jobs:
  e2e_test:
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        suite:
          - name: accessibility
          - name: additionalEditorFeatures
          - name: additionalEditorFeaturesModals
          - name: additionalPlayerFeatures
          - name: adminPage
          - name: blogDashboard
          - name: blog
          - name: checkpointFeatures
          - name: classroomPage
          - name: classroomPageFileUploadFeatures
          - name: collections
          - name: contributorDashboard
          - name: contributorAdminDashboard
          - name: coreEditorAndPlayerFeatures
          - name: creatorDashboard
          - name: embedding
          - name: explorationFeedbackTab
          - name: explorationImprovementsTab
          - name: explorationHistoryTab
          - name: explorationStatisticsTab
          - name: explorationTranslationTab
          - name: extensions
          - name: featureGating
          - name: feedbackUpdates
          - name: fileUploadExtensions
          - name: fileUploadFeatures
            flaky_indicators: |
              Play record button is not clickable
              Translation tab button is not clickable
          - name: learner
          - name: learnerDashboard
          - name: library
          - name: navigation
          - name: playVoiceovers
          - name: preferences
          - name: profileFeatures
          - name: profileMenu
          - name: publication
          - name: skillEditor
          - name: subscriptions
          - name: topicsAndSkillsDashboard
            flaky_indicators: |
              Classroom config tile selector is not visible
          - name: topicAndStoryEditor
          - name: topicAndStoryEditorFileUploadFeatures
          - name: topicAndStoryViewer
          - name: users
          - name: wipeout
    name: e2e_test (${{ matrix.os }}, ${{ matrix.suite.name }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
      - uses: ./.github/actions/install-chrome
      - name: Install ffmpeg
        run: sudo apt install ffmpeg
      - name: Initializing Containers
        run: |
          make build
          # This is required as E2E tests are run on the host machine and not in the docker container.
          docker compose up angular-build -d
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run E2E Test ${{ matrix.suite.name }}
        uses: oppia/retry@a9fb265410e634c84ee90f3e87f323fde0541037
        with:
          max_attempts: 2
          substrings_indicating_flaky_execution: ${{ matrix.suite.flaky_indicators || '' }}
          command: >
            sudo xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.e2e suite=${{ matrix.suite.name }} VIDEO_RECORDING_IS_ENABLED=1
      - name: tree
        if: ${{ failure() }}
        run: |
          ls /home/runner/work/oppia/
          ls /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-video
          path: /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio screenshots as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-screenshots
          path: /home/runner/work/oppia/webdriverio-screenshots
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  lighthouse:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        shard: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
      - uses: ./.github/actions/merge
      - name: Install chrome
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        uses: ./.github/actions/install-chrome
      - name: Initializing Containers
        run: |
          make build
          docker compose up angular-build -d
          # This is required as lighthouse tests are run on the host machine and not in the docker container.
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run Lighthouse performance checks shard
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        run: make run_tests.lighthouse_performance shard=${{ matrix.shard }} RECORD_SCREEN="true"
      - name: Uploading puppeteer video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with: 
          name: lhci-puppeteer-video
          path: /home/runner/work/oppia/lhci-puppeteer-video/video.mp4
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "A Lighthouse test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  acceptance_test:
      runs-on:  ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-22.04]
          suite:
            - blog-admin-tests/assign-roles-to-users-and-change-tag-properties
            - blog-editor-tests/try-to-publish-a-duplicate-blog-post-and-get-blocked
            - logged-in-user-tests/click-all-buttons-on-navbar
            - logged-in-user-tests/click-all-buttons-in-about-page
            - logged-in-user-tests/click-all-buttons-in-about-foundation-page
            - logged-in-user-tests/click-all-buttons-in-thanks-for-donating-page
            - practice-question-admin-tests/add-and-remove-contribution-rights
            - translation-admin-tests/add-translation-rights
            - translation-admin-tests/remove-translation-rights
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v3
          with:
            python-version: '3.8.15'
            architecture: 'x64'
        - name: Free disk space
          run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
        - uses: ./.github/actions/merge
        - uses: ./.github/actions/install-chrome
        - name: Initializing Containers
          run: |
            make build
            docker compose up angular-build -d
            # This is required as lighthouse tests are run on the host machine and not in the docker container.
            sudo docker cp oppia-angular-build:/app/oppia/node_modules .
        - name: Run Acceptance Test ${{ matrix.suite }}
          run: xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.acceptance suite=${{ matrix.suite }}
        - name: Report failure if failed on oppia/oppia develop branch
          if: ${{
            failure() &&
            github.event_name == 'push' &&
            github.repository == 'oppia/oppia' &&
            github.ref == 'refs/heads/develop'
            }}
          uses: ./.github/actions/send-webhook-notification
          with:
            message: "An acceptance test failed on the upstream develop branch."
            webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
