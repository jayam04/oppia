name: End-to-End, Lighthouse CI performance and Acceptance tests
on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*

jobs:
  check_test_suites_to_run:
    uses: ./.github/workflows/check_test_suites_to_run.yml
  e2e_test:
    needs: check_test_suites_to_run
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).e2e.count > 0 }}
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).e2e.suites }}
    name: e2e_test (${{ matrix.os }}, ${{ matrix.suite.name }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
      - uses: ./.github/actions/install-chrome
      - name: Install ffmpeg
        run: sudo apt install ffmpeg
      - name: Initializing Containers
        run: |
          make build
          # This is required as E2E tests are run on the host machine and not in the docker container.
          docker compose up angular-build -d
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run E2E Test ${{ matrix.suite.name }}
        uses: oppia/retry@a9fb265410e634c84ee90f3e87f323fde0541037
        with:
          max_attempts: 2
          substrings_indicating_flaky_execution: ${{ matrix.suite.flaky_indicators || '' }}
          command: >
            sudo xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.e2e suite=${{ matrix.suite.name }} VIDEO_RECORDING_IS_ENABLED=0
      - name: tree
        if: ${{ failure() }}
        run: |
          ls /home/runner/work/oppia/
          ls /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-video
          path: /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio screenshots as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-screenshots
          path: /home/runner/work/oppia/webdriverio-screenshots
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  lighthouse_performance:
    needs: check_test_suites_to_run
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).lighthouse_performance.count > 0 }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).lighthouse_performance.suites }}
    name: lighthouse (${{ matrix.os }}, ${{ matrix.suite.name }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
      - uses: ./.github/actions/merge
      - name: Install chrome
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        uses: ./.github/actions/install-chrome
      - name: Initializing Containers
        run: |
          make build
          docker compose up angular-build -d
          # This is required as lighthouse tests are run on the host machine and not in the docker container.
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run Lighthouse performance checks shard
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        run: make run_tests.lighthouse_performance PYTHON_ARGS="--skip_build --record_screen --pages ${{ join(matrix.suite.pages_to_run, ',') }}"
      - name: Uploading puppeteer video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with: 
          name: lhci-puppeteer-video
          path: /home/runner/work/oppia/lhci-puppeteer-video/video.mp4
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "A Lighthouse test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  acceptance_test:
      needs: check_test_suites_to_run
      if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).acceptance.count > 0 }}
      runs-on:  ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-22.04]
          suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).acceptance.suites }}
      name: acceptance_test (${{ matrix.os }}, ${{ matrix.suite.name }})
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v3
          with:
            python-version: '3.8.15'
            architecture: 'x64'
        - name: Free disk space
          run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf "$AGENT_TOOLSDIRECTORY" 
        - uses: ./.github/actions/merge
        - uses: ./.github/actions/install-chrome
        - name: Initializing Containers
          run: |
            make build
            docker compose up angular-build -d
            # This is required as lighthouse tests are run on the host machine and not in the docker container.
            sudo docker cp oppia-angular-build:/app/oppia/node_modules .
        - name: Run Acceptance Test ${{ matrix.suite.name }}
          run: xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.acceptance suite=${{ matrix.suite.name }}
        - name: Uploading generated test to angular module mapping as an artifact
          if: ${{ failure() }}
          uses: actions/upload-artifact@v3
          with:
            name: generated-test-to-angular-module-mapping
            path: /home/runner/work/oppia/oppia/core/tests/test-modules-mappings/acceptance/${{ matrix.suite.name }}.txt
        - name: Run Mobile Acceptance Test ${{ matrix.suite.name }}
          run: xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.acceptance suite=${{ matrix.suite.name }} MOBILE=true
        - name: Uploading webpack bundles as an artifact
          if: ${{ failure() }}
          uses: actions/upload-artifact@v3
          with:
            name: webpack-bundles
            path: /home/runner/work/oppia/oppia/build
        - name: Report failure if failed on oppia/oppia develop branch
          if: ${{
            failure() &&
            github.event_name == 'push' &&
            github.repository == 'oppia/oppia' &&
            github.ref == 'refs/heads/develop'
            }}
          uses: ./.github/actions/send-webhook-notification
          with:
            message: "An acceptance test failed on the upstream develop branch."
            webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  check_e2e_lighthouse_performance_acceptance_workflow_status:
    needs: [check_test_suites_to_run, e2e_test, lighthouse_performance, acceptance_test]
    if: always()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - uses: ./.github/actions/check-workflow-status
        id: check_workflow_status
        with:
          jobs: ${{ toJson(needs) }}
      - name: Fail if workflow status is failure
        if: ${{ steps.check_workflow_status.outputs.WORKFLOW_STATUS == 'failure' }}
        run: exit 1
